"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const clui_1 = __importDefault(require("clui"));
const ipfs_http_client_1 = require("ipfs-http-client");
const ipfs_only_hash_1 = __importDefault(require("ipfs-only-hash"));
class IPFS {
    logs = true;
    constructor(logs = true) {
        this.logs = logs;
    }
    async deploy(dir) {
        let countdown;
        if (this.logs) {
            countdown = new clui_1.default.Spinner(`Deploying to IPFS...`, ['⣾', '⣽', '⣻', '⢿', '⡿', '⣟', '⣯', '⣷']);
            countdown.start();
        }
        const ipfs = ipfs_http_client_1.create({
            host: 'ipfs.infura.io',
            port: 5001,
            protocol: 'https',
        });
        // @ts-ignore
        const files = await ipfs.add(ipfs_http_client_1.globSource(dir, { recursive: true }));
        countdown.stop();
        return files;
    }
    async hash(data) {
        return ipfs_only_hash_1.default.of(data);
    }
}
exports.default = IPFS;
